{"version":3,"sources":["contexts/Contexts.js","components/PostProvider/PostProvider.js","actions/actionTypes.js","actions/actionCreators.js","components/Loader/Loader.js","components/Post/Post.js","components/Posts/Posts.js","components/EditPostForm/EditPostForm.js","serviceWorker.js","index.js","App.js","components/Loader/45.gif"],"names":["PostContext","createContext","initialState","posts","items","loading","error","editedPost","item","id","price","category","description","removedPost","value","totalSum","postsReducer","prevPosts","action","type","payload","editPostReducer","prevPost","name","removePostReducer","totalSumReducer","descriptionReducer","prevDesc","console","log","desc","reducer","prevState","PostProvider","props","useReducer","state","dispatch","Provider","children","fetchPostSuccess","fetchPostFailure","getAllPosts","a","fetch","response","ok","Error","json","editPost","editPostRequest","method","headers","body","JSON","stringify","editPostSuccess","editPostFailure","removePostById","removePostRequest","removePostSuccess","removePostError","subtractFromTotalSum","changeTotalSum","initialPrice","newPrice","showDescription","showDescriptionRequest","text","showDescriptionSuccesss","showDescriptionFailure","Loader","src","loader","alt","Post","useContext","handleProcess","evt","preventDefault","parseInt","handleRemove","handleCancel","handleEdit","editExistingPost","useEffect","className","class","href","onClick","o","nClick","Posts","errorEl","map","key","EditPostForm","currentPrice","arr","find","handleChange","target","editPostChangeField","onSubmit","onReset","placeholder","onChange","aria-label","aria-describedby","for","selected","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.102433c1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst PostContext = createContext();\n\nexport default PostContext;","import React, { useReducer, } from 'react';\nimport PostContext from '../../contexts/Contexts';\nimport { FETCH_POST_REQUEST, FETCH_POST_SUCCESS, FETCH_POST_FAILURE, EDIT_POST_REQUEST, EDIT_POST_SUCCESS, EDIT_POST_FAILURE, EDIT_POST_CHANGE_FIELD, EDIT_POST_CANCEL, EDIT_EXISTING_POST, REMOVE_POST_FIRST, REMOVE_POST_CANCEL, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADD_TO_TOTAL_SUM, SUBTRACT_FROM_TOTAL_SUM, SHOW_DESCRIPTION_REQUEST, SHOW_DESCRIPTION_SUCCESS, SHOW_DESCRIPTION_FAILURE, CHANGE_TOTAL_SUM } from '../../actions/actionTypes';\n\nconst initialState = {\n    posts: {\n        items: [],\n        loading: false,\n        error: null,\n    },\n    editedPost: {\n        item: {\n            id: 0,\n            price: \"\",\n            category: \"food\",\n            description: \"\"\n        },\n        loading: false,\n        error: null,\n    },\n    removedPost: {\n        id: 0,\n        loading: false,\n        error: null,\n    },\n    description: {\n        id: 0,\n        value: \"\",\n        loading: false,\n        error: null,\n    },\n    totalSum: 0,\n};\n\nfunction postsReducer(prevPosts, action) {\n    switch (action.type) {\n        case FETCH_POST_REQUEST:\n            return { ...prevPosts, loading: true, error: null };\n        case FETCH_POST_SUCCESS:\n            return { items: action.payload.posts, loading: false, error: null };\n        case FETCH_POST_FAILURE:\n            return { ...prevPosts, loading: false, error: action.payload.error };\n        default:\n            return prevPosts;\n    }\n}\n\nfunction editPostReducer(prevPost, action) {\n    switch (action.type) {\n        case EDIT_POST_CHANGE_FIELD:\n            return { ...prevPost, item: { ...prevPost.item, [action.payload.name]: action.payload.value } };\n        case EDIT_POST_REQUEST:\n            return { ...prevPost, loading: true, error: null };\n        case EDIT_POST_SUCCESS:\n            return { item: { id: 0, price: \"\", category: \"Food\", description: \"\" }, loading: false, error: null };\n        case EDIT_POST_FAILURE:\n            return { ...prevPost, loading: false, error: action.payload.error };\n        case EDIT_POST_CANCEL:\n            return { item: { id: 0, price: \"\", category: \"Food\", description: \"\" }, loading: false, error: null };\n        case EDIT_EXISTING_POST:\n            return { item: { ...action.payload.item }, loading: false, error: null };\n        default:\n            return prevPost;\n    }\n}\n\nfunction removePostReducer(prevPost, action) {\n    switch (action.type) {\n        case REMOVE_POST_FIRST:\n            return { id: action.payload.id, loading: false, error: null };\n        case REMOVE_POST_CANCEL:\n            return { id: 0, loading: false, error: null };\n        case REMOVE_POST_REQUEST:\n            return { ...prevPost, loading: true, error: null };\n        case REMOVE_POST_SUCCESS:\n            return { id: 0, loading: false, error: null };\n        case REMOVE_POST_ERROR:\n            return { ...prevPost, loading: false, error: action.payload.error }\n        default:\n            return prevPost;\n    }\n}\n\nfunction totalSumReducer(totalSum, action) {\n    switch (action.type) {\n        case ADD_TO_TOTAL_SUM:\n            return totalSum + action.payload.price;\n        case SUBTRACT_FROM_TOTAL_SUM:\n            return totalSum - action.payload.price;\n        case CHANGE_TOTAL_SUM:\n            return totalSum + action.payload.price \n        default:\n            return totalSum\n    }\n}\n\nfunction descriptionReducer(prevDesc, action) {\n    switch (action.type) {\n        case SHOW_DESCRIPTION_REQUEST:\n            console.log(\"req\");\n            return { ...prevDesc, loading: true, error: null };\n        case SHOW_DESCRIPTION_SUCCESS:\n            return { ...prevDesc, id: action.payload.id, value: action.payload.desc, loading: false, error: null };\n        case SHOW_DESCRIPTION_FAILURE:\n            console.log(\"fai\");\n            return { ...prevDesc, loading: false, error: action.payload.error };\n        default:\n            return prevDesc;\n    }\n}\n\nfunction reducer(prevState, action) {\n    switch (action.type) {\n        case FETCH_POST_REQUEST:\n        case FETCH_POST_SUCCESS:\n        case FETCH_POST_FAILURE:\n            return { ...prevState, posts: postsReducer(prevState.posts, action) };\n        case EDIT_POST_CHANGE_FIELD:\n        case EDIT_POST_REQUEST:\n        case EDIT_POST_SUCCESS:\n        case EDIT_POST_FAILURE:\n        case EDIT_POST_CANCEL:\n        case EDIT_EXISTING_POST:\n            return { ...prevState, editedPost: editPostReducer(prevState.editedPost, action) };\n        case REMOVE_POST_FIRST:\n        case REMOVE_POST_CANCEL:\n        case REMOVE_POST_REQUEST:\n        case REMOVE_POST_SUCCESS:\n        case REMOVE_POST_ERROR:\n            return { ...prevState, removedPost: removePostReducer(prevState.removedPost, action) };\n        case ADD_TO_TOTAL_SUM:\n        case SUBTRACT_FROM_TOTAL_SUM:\n        case CHANGE_TOTAL_SUM:\n            return { ...prevState, totalSum: totalSumReducer(prevState.totalSum, action) };\n        case SHOW_DESCRIPTION_REQUEST:\n        case SHOW_DESCRIPTION_SUCCESS:\n        case SHOW_DESCRIPTION_FAILURE:\n            return { ...prevState, description: descriptionReducer(prevState.description, action) };\n        default:\n            return prevState;\n    }\n}\n\nexport default function PostProvider(props) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <PostContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </PostContext.Provider>\n    )\n}\n","export const FETCH_POST_REQUEST = \"FETCH_POST_REQUEST\";\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\";\n\nexport const EDIT_POST_CHANGE_FIELD = \"EDIT_POST_CHANGE_FIELD\";\nexport const EDIT_POST_REQUEST = \"EDIT_POST_REQUEST\";\nexport const EDIT_POST_SUCCESS = \"EDIT_POST_SUCCESS\";\nexport const EDIT_POST_FAILURE = \"EDIT_POST_FAILURE\";\nexport const EDIT_POST_CANCEL = \"EDIT_POST_CANCEL\";\nexport const EDIT_EXISTING_POST = \"EDIT_EXISTING_POST\";\n\nexport const REMOVE_POST_FIRST = \"REMOVE_MEMO_FIRST\";\nexport const REMOVE_POST_CANCEL = \"REMOVE_MEMO_CANCEL\";\nexport const REMOVE_POST_BY_ID = \"REMOVE_POST_BY_ID\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_ERROR = \"REMOVE_POST_ERROR\";\n\nexport const ADD_TO_TOTAL_SUM = \"ADD_TO_TOTAL_SUM\";\nexport const SUBTRACT_FROM_TOTAL_SUM = \"SUBTRACT_FROM_TOTAL_SUM\";\nexport const CHANGE_TOTAL_SUM = \"CHANGE_TOTAL_SUM\";\n\nexport const SHOW_DESCRIPTION_REQUEST = \"SHOW_DESCRIPTION_REQUEST\";\nexport const SHOW_DESCRIPTION_SUCCESS = \"SHOW_DESCRIPTION_SUCCESS\";\nexport const SHOW_DESCRIPTION_FAILURE = \"SHOW_DESCRIPTION_FAILURE\";\n","import { FETCH_POST_REQUEST, FETCH_POST_SUCCESS, FETCH_POST_FAILURE, EDIT_POST_REQUEST, EDIT_POST_SUCCESS, EDIT_POST_FAILURE, EDIT_POST_CHANGE_FIELD, EDIT_POST_CANCEL, EDIT_EXISTING_POST, REMOVE_POST_FIRST, REMOVE_POST_CANCEL, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADD_TO_TOTAL_SUM, SUBTRACT_FROM_TOTAL_SUM, SHOW_DESCRIPTION_REQUEST, SHOW_DESCRIPTION_SUCCESS, SHOW_DESCRIPTION_FAILURE, CHANGE_TOTAL_SUM } from \"./actionTypes\";\n\nexport function fetchPostRequest() {\n    return {\n        type: FETCH_POST_REQUEST,\n        payload: {}\n    }\n}\n\nexport function fetchPostSuccess(posts) {\n    return {\n        type: FETCH_POST_SUCCESS,\n        payload: {\n            posts,\n        }\n    }\n}\n\nexport function fetchPostFailure(error) {\n    return {\n        type: FETCH_POST_FAILURE,\n        payload: {\n            error,\n        }\n    }\n}\n\nexport async function getAllPosts(dispatch) {\n    dispatch(fetchPostRequest());\n    try {\n        const response = await fetch(\"https://requeststaha.herokuapp.com/api/posts\");\n        if (!response.ok) {\n            throw new Error(\"Wrong Request\");\n        }\n        const posts = await response.json();\n        dispatch(fetchPostSuccess(posts));\n    } catch (e) {\n        dispatch(fetchPostFailure(e));\n        throw e;\n    }\n}\n\nexport async function editPost(dispatch, item) {\n    dispatch(editPostRequest());\n    try {\n        const response = await fetch(\"https://requeststaha.herokuapp.com/api/posts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(item)\n        });\n        if (!response.ok) {\n            throw new Error(\"error\");\n        }\n        dispatch(editPostSuccess());\n    } catch (e) {\n        dispatch(editPostFailure(e));\n        throw e;\n    }\n}\n\nexport function editPostRequest() {\n    return {\n        type: EDIT_POST_REQUEST,\n        payload: {}\n    }\n}\n\nexport function editPostSuccess() {\n    return {\n        type: EDIT_POST_SUCCESS,\n        payload: {}\n    }\n}\n\nexport function editPostFailure(error) {\n    return {\n        type: EDIT_POST_FAILURE,\n        payload: {\n            error,\n        }\n    };\n}\n\nexport function editPostChangeField(name, value) {\n    return {\n        type: EDIT_POST_CHANGE_FIELD,\n        payload: {\n            name,\n            value,\n        }\n    }\n}\n\nexport function editPostCancel() {\n    return {\n        type: EDIT_POST_CANCEL,\n        payload: {}\n    }\n}\n\nexport function editExistingPost(item) {\n    return {\n        type: EDIT_EXISTING_POST,\n        payload: {\n            item,\n        }\n    }\n}\n\nexport function removePostFirst(id) {\n    return {\n        type: REMOVE_POST_FIRST,\n        payload: {\n            id,\n        }\n    }\n}\n\nexport function removePostCancel() {\n    return {\n        type: REMOVE_POST_CANCEL,\n        payload: {}\n    }\n}\n\nexport async function removePostById(dispatch, id) {\n    dispatch(removePostRequest());\n    try {\n        const response = await fetch(`https://requeststaha.herokuapp.com/api/posts/${id}`, {\n            method: \"DELETE\"\n        });\n        if (!response.ok) {\n            throw new Error(\"error\");\n        }\n        dispatch(removePostSuccess());\n    } catch (e) {\n        dispatch(removePostError(e));\n    }\n}\n\nexport function removePostRequest() {\n    return {\n        type: REMOVE_POST_REQUEST,\n        payload: {}\n    }\n}\n\nexport function removePostSuccess() {\n    return {\n        type: REMOVE_POST_SUCCESS,\n        payload: {}\n    }\n}\n\nexport function removePostError(error) {\n    return {\n        type: REMOVE_POST_ERROR,\n        payload: {\n            error,\n        }\n    }\n}\n\nexport function addToTotalSum(price) {\n    return {\n        type: ADD_TO_TOTAL_SUM,\n        payload: {\n            price,\n        }\n    }\n}\n\nexport function subtractFromTotalSum(price) {\n    return {\n        type: SUBTRACT_FROM_TOTAL_SUM,\n        payload: {\n            price,\n        }\n    }\n}\n\nexport function changeTotalSum(initialPrice, newPrice) {\n    return {\n        type: CHANGE_TOTAL_SUM,\n        payload: {\n            price: newPrice - initialPrice,\n        }\n    }\n}\n\nexport async function showDescription(dispatch, id) {\n    dispatch(showDescriptionRequest());\n    try {\n        const response = await fetch(`https://requeststaha.herokuapp.com/api/posts/desc/${id}`);\n        if (!response.ok) {\n            console.log(\"help me2\");\n            throw new Error(\"error\");\n        }\n        const desc = await response.text();\n        console.log(desc);\n        dispatch(showDescriptionSuccesss(id, desc))\n    } catch (e) {\n        dispatch(showDescriptionFailure(e));\n    }\n}\n\nexport function showDescriptionRequest() {\n    return {\n        type: SHOW_DESCRIPTION_REQUEST,\n        payload: {}\n    }\n}\n\nexport function showDescriptionSuccesss(id, desc) {\n    return {\n        type: SHOW_DESCRIPTION_SUCCESS,\n        payload: {\n            id,\n            desc,\n        }\n    }\n}\n\nexport function showDescriptionFailure(error) {\n    return {\n        type: SHOW_DESCRIPTION_FAILURE,\n        payload: {\n            error,\n        }\n    }\n}","import React from 'react';\nimport loader from './45.gif';\n\nexport default function Loader() {\n    return (\n        <img src={loader} alt=\"\"/>\n    )\n}\n","import React, { useContext } from 'react'\nimport PostContext from '../../contexts/Contexts'\nimport { removePostById, editExistingPost, removePostFirst, removePostCancel, getAllPosts, addToTotalSum, subtractFromTotalSum, showDescription } from '../../actions/actionCreators';\nimport Loader from '../Loader/Loader';\nimport { useEffect } from 'react';\n\nexport default function Post({ item }) {\n    const { state: { removedPost, description }, dispatch } = useContext(PostContext);\n    useEffect(() => {\n        dispatch(addToTotalSum(parseInt(item.price, 10)));\n    }, [dispatch, item.price]);\n\n    async function handleProcess(evt) {\n        evt.preventDefault();\n        try {\n            await removePostById(dispatch, item.id);\n            await getAllPosts(dispatch);\n            dispatch(subtractFromTotalSum(parseInt(item.price, 10)));\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    function handleRemove(evt) {\n        evt.preventDefault();\n        dispatch(removePostFirst(item.id));\n    }\n\n    function handleCancel(evt) {\n        evt.preventDefault();\n        dispatch(removePostCancel());\n    }\n\n    function handleEdit(evt) {\n        evt.preventDefault();\n        dispatch(editExistingPost(item));\n    }\n\n    async function handleDesc(evt) {\n        evt.preventDefault();\n        try {\n            await showDescription(dispatch, item.id);\n            await getAllPosts(dispatch);\n        } catch (e) {\n            // console.log(e);\n        }\n    }\n\n    function getFooter() {\n        if (removedPost.loading) {\n            return <Loader />;\n        }\n        if (removedPost.id !== item.id) {\n            return (\n                <div>\n                    <button class=\"btn btn-success\" href=\"\" onClick={handleEdit}>edit</button>\n                    <button class=\"btn btn-danger\" href=\"\" onClick={handleRemove}>delete</button>\n                </div>\n            );\n        }\n        if (removedPost.error) {\n            return (\n                <div>\n                    <p>Error occured. Retry?</p>\n                    <button class=\"btn btn-success\" href=\"\" onClick={handleProcess}>Yes</button>\n                    <button class=\"btn btn-danger\" href=\"\" onClick={handleCancel}>No</button>\n                </div>\n            );\n        }\n        return (\n            <div>\n                Are you sure, you want to delete this post?\n                <button class=\"btn btn-success\" href=\"\" onClick={handleProcess}>Yes</button>\n                <button class=\"btn btn-danger\" href=\"\" onClick={handleCancel}>No</button>\n            </div>\n        );\n    }\n    function getDesc() {\n        return (<div class=\"card\">\n            <div class=\"card-body\">\n                {description.value}\n            </div>\n        </div>)\n    }\n    return (\n        <div className=\"card text-center col-5\" >  \n        {getFooter()}\n            <div class=\"card-header\">\n                 <p>Category: {item.category}</p>\n                    </div>\n            <p>Price: {item.price}</p>\n           \n            <button class=\"btn btn-info\" o  nClick={handleDesc}>Show Description</button>\n            {description.loading && <Loader />}\n            {item.id === description.id && getDesc()}\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport PostContext from '../../contexts/Contexts'\nimport Post from '../Post/Post';\nimport { getAllPosts } from '../../actions/actionCreators';\nimport Loader from '../Loader/Loader';\n\nexport default function Posts() {\n    const { state, dispatch } = useContext(PostContext);\n\n    const { posts: { items, loading, error } } = state;\n\n    async function handleRetry() {\n        try {\n            await getAllPosts(dispatch);\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        (async function () {\n            try {\n                await getAllPosts(dispatch);\n            } catch (e) {\n                console.log(e);\n            }\n        })();\n    }, [dispatch]);\n\n    const errorEl = (\n        <>\n            <p>Error occured</p>\n            <button onClick={handleRetry}>retry</button>\n        </>\n    );\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {items.map(o => <Post key={o.id} item={o} />)}\n            <span>total sum: </span>{state.totalSum}\n            {error && errorEl}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { editPost, getAllPosts, editPostChangeField, editPostCancel, changeTotalSum } from '../../actions/actionCreators';\nimport PostContext from '../../contexts/Contexts';\nimport Loader from '../Loader/Loader';\n\nexport default function EditPostForm() {\n    const { state, dispatch } = useContext(PostContext);\n    const { editedPost: { item, loading, error } } = state;\n\n    let currentPrice = 0;\n\n    async function handleSave(evt) {\n        evt.preventDefault();\n        try {\n            await editPost(dispatch, item);\n            await getAllPosts(dispatch);\n            const arr = state.posts.items.find(o => o.id === item.id);\n            currentPrice = parseInt(arr.price, 10);\n            dispatch(changeTotalSum(currentPrice, parseInt(item.price, 10)));\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleChange = evt => {\n        const { target: { name, value } } = evt;\n        dispatch(editPostChangeField(name, value));\n    };\n\n    function handleCancel() {\n        dispatch(editPostCancel());\n    }\n\n    function getFooter() {\n        if (loading) {\n            return (\n                <Loader />\n            )\n        }\n        if (error) {\n            return (\n                <>\n                    <span>Error occured</span>\n                    <button>Retry</button>\n                    <button type=\"reset\">Cancel</button>\n                </>\n            )\n        }\n        return (\n            <>\n                <button className=\"btn btn-success\">{item.id === 0 ? 'Add' : 'Save'}</button>\n                <button class=\"btn btn-danger\" type=\"reset\">cancel</button>\n            </>\n        )\n    }\n\n    return (\n        <form onSubmit={handleSave} onReset={handleCancel}>\n\n\n            <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">Price:</span>\n                </div>\n                <input name=\"price\" type=\"text\" class=\"form-control col-3\" placeholder=\"Price\" onChange={handleChange} value={item.price} aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\n            </div>\n\n            <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend\">\n                    <label class=\"input-group-text\" for=\"inputGroupSelect01\">Category</label>\n                </div>\n                <select class=\"custom-select col-2\" name=\"category\" id=\"category\" onChange={handleChange} value={item.category}>\n                    <option selected>Choose...</option>\n                    <option value=\"Food\">Food</option>\n                    <option value=\"Travel\">Travel</option>\n                    <option value=\"Beauty\">Beauty</option>\n                </select>\n            </div>\n\n\n\n            <div class=\"input-group mb-3\">\n                <div class=\"input-group-prepend \">\n                    <span class=\"input-group-text\">Description</span>\n                </div>\n                <textarea name=\"description\" placeholder=\"description\" value={item.description} onChange={handleChange} class=\"form-control col-5\" aria-label=\"With textarea\"></textarea>\n            </div>\n\n\n            {getFooter()}\n        </form>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport PostProvider from './components/PostProvider/PostProvider';\nimport Posts from './components/Posts/Posts';\nimport EditPostForm from './components/EditPostForm/EditPostForm';\n\nexport default function App() {\n  return (\n    <div>\n      <PostProvider>\n        <EditPostForm />\n        <Posts />\n      </PostProvider>\n    </div>\n  )\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/45.fec456b1.gif\";"],"sourceRoot":""}